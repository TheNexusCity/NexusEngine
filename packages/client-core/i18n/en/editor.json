{
    "loading": "Loading Project",
    "loadingMsg": "Loading project...",
    "loadingError": "Error loading project",
    "loadingErrorMsg": "There was an error when loading the project.",
    "error": "Error",
    "errorMsg": "There was an unknown error.",
    "generateScreenshot": "Generating Project Screenshot",
    "generateScreenshotMsg": "Generating project screenshot...",
    "newScene": "New Scene",
    "saving": "Saving Project",
    "savingMsg": "Saving project...",
    "savingError": "Error Saving Project",
    "savingErrorMsg": "There was an error when saving the project.",
    "duplicating": "Duplicating Project",
    "duplicatingMsg": "Duplicating project...",
    "exporting": "Exporting Project",
    "exportingMsg": "Exporting project...",
    "exportingError": "Error Exporting Project",
    "exportingErrorMsg": "There was an error when exporting the project.",
    "importLegacy": "Import Legacy World",
    "importLegacyMsg": "Warning! This will overwrite your existing scene! Are you sure you wish to continue?",
    "publishingError": "Error Publishing Project",
    "publishingErrorMsg": "There was an unknown error.",
    "publishingScene": "Publishing Scene",
    "publishingSceneMsg": "Publishing scene...",
    "uploadingThumbnailMsg": "Uploading thumbnail...",
    "uploadingSceneMsg": "Uploading scene: {{percentage}}%",
    "envMapError": "Error loading cubemap images {{files}}",
    "lbl-return": "Return",
    "menubar": {
        "newProject": "New Scene",
        "saveProject": "Save Scene",
        "saveAs": "Save As",
        "exportGLB": "Export as binary glTF (.glb) ...",
        "importProject": "Import scene",
        "exportProject": "Export scene",
        "quit": "Quit"
    },
    "errors": {
        "fileTypeNotSupported": "Unsupported file type for file: \"{{name}}\". File must be an image, video, or glb model.",
        "addObject": "addObject: before object not found",
        "removeObject": "removeObject: node not found. This is due to removing a node that is no longer in the scene.",
        "noParent": "{{node}} \"{{name}}\" has no parent. Reparent only works on objects that are currently in the scene.",
        "undefinedParent": "editor.reparent: newParent is undefined",
        "notAuthenticated": "Not authenticated",
        "fetchingProjectError": "Error fetching projects: {{error}}",
        "fetchingRouteError": "Error fetching routes: {{error}}",
        "unknownError": "Unknown error",
        "resolveURL": "Error resolving url \"{{url}}\":\n",
        "mediaSearchAborted": "Media search aborted",
        "methodNotImplemented": "Method not implemented.",
        "saveProjectAborted": "Save scene aborted",
        "projectCreationFail": "Project creation failed. {{reason}}",
        "projectDeletionFail": "Project deletion failed. {{reason}}",
        "savingProjectFail": "Saving Project failed. {{reason}}",
        "sceneTooLarge": "Scene is too large ({{size}} MB) to publish. Maximum size is {{maxSize}} MB.",
        "sceneCreationFail": "Scene creation failed. {{reason}}",
        "uploadAborted": "Upload aborted",
        "uploadFailed": "Upload failed {{reason}}",
        "assetDeletionFail": "Asset deletion failed. {{reason}}",
        "projectAssetDeletionFail": "Project Asset deletion failed. {{reason}}",
        "networkError": "Network Error: {{status}}. {{text}}",
        "unknownStatus": "Unknown Status",
        "CORS": "Possibly a CORS error",
        "urlFetchError": "Failed to fetch \"{{url}}\""
    },
    "viewport": {
        "title": "Viewport",
        "command": {
            "movecamera": "Move Camera",
            "flyFast": "Fly faster",
            "orbit": "Orbit / Select",
            "pan": "Pan",
            "fly": "Fly",
            "focus": "Focus",
            "rotateLeft": "Rotate Left",
            "rotateRight": "Rotate Right",
            "cancelPlacement": "Cancel Placement",
            "placeDuplicate": "Place Duplicate",
            "cancelGrab": "Cancel Grab",
            "grab": "Grab",
            "deselectAll": "Deselect All"
        },
        "state": {
            "header": "Stats",
            "memory": "Memory",
            "geometries": "Geometries",
            "textures": "Textures",
            "render": "Render",
            "FPS": "FPS",
            "frameTime": "Frame Time",
            "calls": "Calls",
            "triangles": "Triangles",
            "points": "Points",
            "lines": "Lines"
        }
    },
    "toolbar": {
        "lbl-publish": "Publish",
        "lbl-published": "Published",
        "command": {
            "translate": "Translate",
            "rotate": "Rotate",
            "scale": "Scale",
            "toggleSpace": "Toggle Transform Space",
            "togglePivot": "Toggle Transform Pivot",
            "toggleSnapMode": "Toggle Snap Mode",
            "toggleGrid": "Toggle Grid Visibility",
            "increaseGridSize": "Increase Grid Size",
            "descreaseGridSize": "Decrease Grid Size",
            "stopPreview": "Stop Previewing Scene",
            "playPreview": "Preview Scene"
        }
    },
    "properties": {
        "title": "Properties",
        "lbl-visible": "Visible",
        "lbl-preventBake": "Prevent Bake",
        "lbl-persist": "Persist",
        "multipleNodeSelected": "Multiple Nodes of different types selected",
        "noNodeSelected": "No node selected",
        "ambientLight": {
            "name": "Ambient Light",
            "description": "A light which illuminates all objects in your scene.",
            "lbl-intensity": "Intensity",
            "lbl-color": "Color"
        },
        "audio": {
            "name": "Audio",
            "description": "Dynamically loads audio.",
            "lbl-audiourl": "Audio Url",
            "lbl-controls": "controls",
            "info-controls": "Toggle the visibility of the media controls in Hubs.",
            "lbl-autoplay": "Auto Play",
            "info-autoplay": "If true, the media will play when first entering the scene.",
            "lbl-synchronize": "Synchronize",
            "info-synchronize": "If true, the media will be Synchronized on all the connected clients.",
            "lbl-loop": "Loop",
            "info-loop": "If true the media will loop indefinitely.",
            "lbl-audioType": "Audio Type",
            "lbl-distanceModel": "Distance Model",
            "info-distanceModel": "The algorithim used to calculate audio rolloff.",
            "lbl-rolloffFactor": "Rolloff Factor",
            "info-rolloffFactor": "A double value describing how quickly the volume is reduced as the source moves away from the listener. 0 to 1",
            "info-rfInfinity": "A double value describing how quickly the volume is reduced as the source moves away from the listener. 0 to Infinity",
            "lbl-refDistance": "Ref Distance",
            "info-refDistance": "A double value representing the reference distance for reducing volume as the audio source moves further from the listener.",
            "lbl-maxDistance": "Max Distance",
            "info-maxDistance": "A double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further.",
            "lbl-coneInnerAngle": "Cone Inner Angle",
            "info-coneInnerAngle": "A double value describing the angle, in degrees, of a cone inside of which there will be no volume reduction.",
            "lbl-coneOuterAngle": "Cone Outer Angle",
            "info-coneOuterAngle": "A double value describing the angle, in degrees, of a cone outside of which the volume will be reduced by a constant value, defined by the coneOuterGain attribute.",
            "lbl-coreOuterGain": "Cone Outer Gain",
            "info-coreOuterGain": "A double value describing the amount of volume reduction outside the cone defined by the coneOuterAngle attribute. Its default value is 0, meaning that no sound can be heard.",
            "lbl-volume": "Volume",
            "lbl-test": "Test"
        },
        "boxCollider": {
            "description": "An invisible box that objects will bounce off of or rest on top of.\nWithout colliders, objects will fall through floors and go through walls.",
            "lbl-isTrigger": "Trigger"
        },
        "directionalLight": {
            "name": "Directional Light",
            "description": "A light which illuminates the entire scene, but emits along a single direction.",
            "lbl-color": "Color",
            "lbl-intensity": "Intensity",
            "lbl-cameraFar": "Camera Far",
            "lbl-cameraNear": "Camera Near",
            "lbl-cameraTop": "Camera Top",
            "lbl-cameraBottom": "Camera Bottom",
            "lbl-cameraLeft": "Camera Left",
            "lbl-cameraRight": "Camera Right",
            "lbl-castShadow": "Cast Shadow",
            "lbl-shadowmapResolution": "Shadow Map Resolution",
            "lbl-shadowBias": "Shadow Bias",
            "lbl-shadowRadius": "Shadow Radius",
            "lbl-showCameraHelper": "Show Camera Helper"
        },
        "groundPlane": {
            "name": "Ground Plane",
            "description": "A flat ground plane that extends into the distance.",
            "lbl-color": "Color",
            "lbl-receiveShadow": "Receive Shadow",
            "lbl-generateNavmesh": "Generate Navmesh"
        },
        "link": {
            "description": "Link to a room or a website.",
            "lbl-url": "URL"
        },
        "map": {
            "description": "3D geospatial map of e.g. a city."
        },
        "model": {
            "description": "A 3D model in your scene, loaded from a GLTF URL or file.",
            "lbl-usingGPUInstancingFlag": "Use GPU Instancing",
            "lbl-modelurl": "Model Url",
            "lbl-envmapUrl": "Environment Map Url",
            "lbl-textureOverride": "Override Texture",
            "error-url": "Error Loading From URL",
            "lbl-loopAnimation": "Loop Animation",
            "lbl-isAvatar": "Is Avatar",
            "lbl-isGPUInstancing": "Is Using GPU Instancing",
            "lbl-isDynamic": "Is Dynamic",
            "lbl-castShadow": "Cast Shadow",
            "lbl-receiveShadow": "Receive Shadow",
            "lbl-interactable": "Interactable",
            "lbl-matrixAutoUpdate": "MatrixAutoUpdate",
            "lbl-name": "Name",
            "lbl-url": "Model Url",
            "lbl-buy": "Buy Url",
            "lbl-learnMore": "Learn More Url",
            "lbl-htmlContent": "Html Content",
            "lbl-interactionText": "Interaction Text",
            "lbl-interactionType": "Interaction Type"
        },
        "interaction": {
            "type": "Interaction Type",
            "text": "Interaction Text",
            "distance": "Interaction Distance",
            "theme": "Interaction Theme",
            "name": "Interaction Name",
            "description": "Interaction Description",
            "images": "Interaction Images",
            "videos": "Interaction Videos",
            "urls": "Interaction Urls",
            "models": "Interaction Models"
        },
        "group": {
            "name": "Group",
            "description": "A group of multiple objects that can be moved or duplicated together.\nDrag and drop objects into the Group in the Hierarchy."
        },
        "hemisphere": {
            "name": "Hemisphere Light",
            "description": "A light which illuminates the scene from directly overhead.",
            "lbl-skyColor": "Sky Color",
            "lbl-groundColor": "Ground Color",
            "lbl-intensity": "Intensity"
        },
        "image": {
            "name": "Image",
            "description": "Dynamically loads an image.",
            "lbl-imgURL": "Image Url",
            "lbl-transparency": "Transparency Mode",
            "lbl-alphaCutoff": "Alpha Cutoff",
            "lbl-projection": "Projection",
            "lbl-side": "Side",
            "info-controls": "Toggle the visibility of the media controls in Hubs.",
            "info-transparency": "How to apply transparency:\n'opaque' = no transparency\n'blend' = use the images alpha channel\n'mask' = Use a specified cutoff value for on/off transparency (more performant)",
            "info-alphaCutoff": "Pixels with alpha values lower than this will be transparent"
        },
        "name": {
            "lbl-name": "Name"
        },
        "partileEmitter": {
            "description": "Particle emitter to create particles.",
            "lbl-particleCount": "Particle Count",
            "lbl-image": "Image",
            "lbl-ageRandomness": "Age Randomness",
            "lbl-lifetime": "Lifetime",
            "lbl-lifetimeRandomness": "Lifetime Randomness",
            "lbl-sizeCurve": "Size Curve",
            "lbl-startPSize": "Start Particle Size",
            "lbl-endPSize": "End Particle Size",
            "lbl-sizeRandomness": "Size Randomness",
            "lbl-colorCurve": "Color Curve",
            "lbl-startColor": "Start Color",
            "lbl-startOpacity": "Start Opacity",
            "lbl-middleColor": "Middle Color",
            "lbl-middleOpacity": "Middle Opacity",
            "lbl-endColor": "End Color",
            "lbl-endOpacity": "End Opacity",
            "lbl-velocityCurve": "Velocity Curve",
            "lbl-startVelocity": "Start Velocity",
            "lbl-endVelocity": "End Velocity",
            "lbl-angularVelocity": "Angular Velocity",
            "info-ageRandomness": "The amount of variation between when particles are spawned.",
            "info-lifetime": "The maximum age of a particle before it is respawned.",
            "info-lifetimeRandomness": "The amount of variation between particle lifetimes.",
            "info-sizeRandomness": "The amount of variation between particle starting sizes."
        },
        "clouds": {
            "name": "Cloud",
            "description": "Sprite based cloud volume.",
            "lbl-image": "Sprite Image",
            "lbl-wroldScale": "World Scale",
            "lbl-dimensions": "Dimensions",
            "lbl-noiseZoom": "Noise Zoom",
            "lbl-noiseOffset": "Noise Offset",
            "lbl-spriteScale": "Sprite Scale",
            "lbl-fogColor": "Fog Color",
            "lbl-fogRange": "Fog Range"
        },
        "ocean": {
            "name": "Ocean",
            "description": "Ocean surface with waves and foam",
            "lbl-normalMap": "Normal Map",
            "lbl-distortionMap": "Distortion Map",
            "lbl-envMap": "Environment Map",
            "lbl-color": "Color",
            "lbl-shallowWaterColor": "Shallow Water Color",
            "lbl-shallowToDeepDistance":  "Shallow to Deep Distance",
            "lbl-opacityFadeDistance":  "Opacity Fade Distance",
            "lbl-opacityRange":  "Opacity Range",
            "lbl-shininess":  "Shininess",
            "lbl-reflectivity":  "Reflectivity",
            "lbl-foamColor":  "Foam Color",
            "lbl-foamSpeed":  "Foam Speed",
            "lbl-foamTiling":  "Foam Tiling",
            "lbl-bigWaveTiling":  "Big Wave Tiling",
            "lbl-bigWaveSpeed":  "Big Wave Speed",
            "lbl-bigWaveHeight":  "Big Wave Height",
            "lbl-waveSpeed":  "Wave Speed",
            "lbl-waveScale":  "Wave Scale",
            "lbl-waveTiling":  "Wave Tiling",
            "lbl-waveDistortionSpeed":  "Wave Distortion Speed",
            "lbl-waveDistortionTiling":  "Wave Distortion Tiling"
        },
        "water": {
            "name": "Water",
            "description": "Small water surface"
        },
        "interior": {
            "name": "Interior",
            "description": "A surface with mapped cube texture to emulate interior environments",
            "lbl-cubeMap":  "Cube Map texture",
            "lbl-tiling": "Tiling amount",
            "lbl-size": "Surface size"
        },
        "pointLight": {
            "description": "A light which emits in all directions from a single point.",
            "lbl-color": "Color",
            "lbl-intensity": "Intensity",
            "lbl-range": "Range",
            "lbl-decay": "Decay"
        },
        "scene": {
            "name": "Scene",
            "description": "The root object of the scene.",
            "lbl-bgcolor": "Background Color",
            "lbl-fogType": "Fog Type",
            "lbl-fogColor": "Fog Color",
            "lbl-forNearDistance": "Fog Near Distance",
            "lbl-fogFarDistance": "Fog Far Distance",
            "lbl-fogDensity": "Fog Density",
            "lbl-audioSettings": "Use Positional Audio",
            "lbl-avatarDistanceModel": "Avatar Distance Model",
            "lbl-avatarRolloffFactor": "Avatar Rolloff Factor",
            "lbl-avatarRefDistance": "Avatar Ref Distance",
            "lbl-avatarMaxDistance": "Avatar Max Distance",
            "lbl-mediaVolume": "Media Volume",
            "lbl-mediaDistanceModel": "Media Distance Model",
            "lbl-mediaRolloffFactor": "Media Rolloff Factor",
            "lbl-mediaRefDistance": "Media Ref Distance",
            "lbl-mediaMaxDistance": "Media Max Distance",
            "lbl-mediaConeInnerAngle": "Media Cone Inner Angle",
            "lbl-mediaConeOuterAngle": "Media Cone Outer Angle",
            "lbl-mediaConeOuterGain": "Media Cone Outer Gain",
            "info-avatarDistanceModel": "The algorithim used to calculate audio rolloff.",
            "info-avatarRolloffFactor": "A double value describing how quickly the volume is reduced as the source moves away from the listener. 0 to 1",
            "info-avatarRolloffFactorInifinity": "A double value describing how quickly the volume is reduced as the source moves away from the listener. 0 to Infinity",
            "info-avatarRefDistance": "A double value representing the reference distance for reducing volume as the audio source moves further from the listener.",
            "info-avatarMaxDistance": "A double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further.",
            "info-mediaDistanceModel": "The algorithim used to calculate audio rolloff.",
            "info-mediaRolloffFactor": "A double value describing how quickly the volume is reduced as the source moves away from the listener. 0 to 1",
            "info-mediaRolloffFactorInfinity": "A double value describing how quickly the volume is reduced as the source moves away from the listener. 0 to Infinity",
            "info-mediaRefDistance": "A double value representing the reference distance for reducing volume as the audio source moves further from the listener.",
            "info-mediaMaxDistance": "A double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further.",
            "info-mediaConeInnerAngle": "A double value describing the angle, in degrees, of a cone inside of which there will be no volume reduction.",
            "info-mediaConeOuterAngle": "A double value describing the angle, in degrees, of a cone outside of which the volume will be reduced by a constant value, defined by the coneOuterGain attribute.",
            "info-mediaConeOuterGain": "A double value describing the amount of volume reduction outside the cone defined by the coneOuterAngle attribute. Its default value is 0, meaning that no sound can be heard.",
            "lbl-simpleMaterials": "Use Simple Materials",
            "lbl-lods": "LODs",
            "info-lods": "Sets the distances at which levels of detail change.",
            "info-simpleMaterials": "Converts all expensive materials to simpler ones to take the load off scene rendering.",
            "lbl-rendererSettings": "Override Renderer Settings",
            "lbl-csm": "Cascading Shadow Maps",
            "info-csm": "Enables cascading shadow maps.",
            "lbl-toneMapping": "Tone Mapping",
            "info-toneMapping": "Enables tone mapping on the scene renderer. Has no effect when a post processing is enabled.",
            "lbl-toneMappingExposure": "Tone Mapping Exposure",
            "info-toneMappingExposure": "Specifies the tone mapping exposure on the scene renderer. Has no effect when a post processing is enabled.",
            "lbl-shadowMapType": "Shadow Map Type",
            "info-shadowMapType": "Type of shadow map"
        },
        "sceneCamera": {
            "name": "Scene Preview Camera",
            "description": "The camera used to generate the thumbnail for your scene and the starting position for the preview camera in Hubs.",
            "lbl-setFromViewPort": "Set From Viewport"
        },
        "skybox": {
            "name": "Skybox",
            "description": "",
            "lbl-timeOfDay": "Time of Day",
            "lbl-color": "Color",
            "lbl-latitude": "Latitude",
            "lbl-luminance": "Luminance",
            "lbl-scattering": "Scattering Amount",
            "lbl-scatteringDistance": "Scattering Distance",
            "lbl-horizonStart": "Horizon Start",
            "lbl-horizonEnd": "Horizon End",
            "lbl-texture": "Texture",
            "lbl-skyType": "Sky Type"
        },
        "spawnPoint": {
            "name": "Spawn Point",
            "description": "A point where people will appear when they enter your scene.\nThe icon in the Viewport represents the actual size of an avatar."
        },
        "spotLight": {
            "description": "A light which emits along a direction, illuminating objects within a cone.",
            "lbl-color": "Color",
            "lbl-intensity": "Intensity",
            "lbl-penumbra": "Penumbra",
            "lbl-angle": "Angle",
            "lbl-range": "Range",
            "lbl-decay": "Decay"
        },
        "transform": {
            "title": "Transform",
            "lbl-postition": "Position",
            "lbl-rotation": "Rotation",
            "lbl-scale": "Scale"
        },
        "triggereVolume": {
            "description": "Sets a property on the target object on enter and leave.",
            "lbl-target": "Object",
            "lbl-onenter": "On Enter",
            "lbl-onexit": "On Exit",
            "lbl-showHelper": "Show Helper Mesh",
            "ph-errorNode": "Error missing node.",
            "ph-selectNode": "Select node..."
        },
        "video": {
            "name": "Video",
            "description": "Dynamically loads a video.",
            "lbl-video": "Video",
            "lbl-projection": "Projection",
            "lbl-islivestream": "Live Stream",
            "lbl-interactable": "Interactable",
            "lbl-id": "Element Id",
            "lbl-test": "Test"
        },
        "volumetric": {
            "name": "Volumetric",
            "description": "Dynamically loads a volumetric video.",
            "uvolPaths": "UVOL Paths",
            "playmode": "Play Mode",
            "playtitle": "Play",
            "pausetitle": "Pause"
        },
        "spline": {
            "description": "Dynamically create and customize curves.",
            "lbl-addNode": "Add node to curve."
        },
        "systemnode": {
            "description": "Attach script.",
            "lbl-filePath": "Url",
            "lbl-systemUpdateType": "Injection Point",
            "lbl-enableClient": "Client",
            "lbl-enableServer": "Server",
            "lbl-args": "Args",
            "error-url": "Error Loading Script From URL"
        },
        "portal": {
            "lbl-portal": "Linked Portal",
            "description": "A Portat to teleport players to specified location",
            "lbl-locationName": "Location",
            "lbl-modelUrl": "Model URL",
            "lbl-displayText": "Display Text",
            "lbl-cubemapBake": "Cubemap bake",
            "lbl-spawnPosition": "Spawn Position",
            "lbl-spawnRotation": "Spawn Rotation",
            "lbl-triggerPosition": "Trigger Position",
            "lbl-triggerRotation": "Trigger Rotation",
            "lbl-triggerScale": "Trigger Scale"
        },
        "postprocessing": {
            "name": "Post Processing",
            "description": "For applying Post Processing effects to you scene."
        }
    },
    "projects": {
        "createProject": {
            "header": "New Project",
            "backLink": "Back to projects",
            "featured": "Featured",
            "all": "All",
            "newProject": "New Empty Project",
            "ph-search": "Search scenes..."
        },
        "grid": {
            "loading": "Loading..."
        },
        "page": {
            "header": "Welcome",
            "headerMsg": "If you're new here we recommend going through the tutorial. Otherwise, jump right in and create a project from scratch or from one of our templates.",
            "lbl-startTutorial": "Start Tutorial",
            "projects": "Projects",
            "lbl-newProject": "New Project"
        }
    },
    "layout": {
        "assetGrid": {
            "loading": "Loading...",
            "placeObject": "Place Object",
            "placeObjectAtOrigin": "Place Object at Origin",
            "copyURL": "Copy URL",
            "openInNewTab": "Open URL in New Tab",
            "deleteAsset": "Delete Asset"
        },
        "filebrowser":{
            "addNewFolder": "Add New Folder",
            "cutAsset": "Cut",
            "copyAsset": "Copy",
            "pasteAsset": "Paste",
            "renameAsset": "Rename"
        }
        
    },
    "hierarchy": {
        "lbl-rename": "Rename",
        "lbl-duplicate": "Duplicate",
        "lbl-group": "Group",
        "lbl-delete": "Delete",
        "lbl-expandAll": "Expand All",
        "lbl-collapseAll": "Collapse All",
        "isseus": "Issues:"
    },
    "dnd": {
        "nodes": "{{count}} Nodes Selected",
        "models": "{{count}} Models Selected",
        "images": "{{count}} Images Selected",
        "videos": "{{count}} Videos Selected",
        "audio": "{{count}} Audio Sources Selected"
    },
    "dialog": {
        "title": "Editor",
        "lbl-confirm": "Ok",
        "lbl-cancel": "Cancel",
        "exportProject": {
            "title": "Export Project",
            "lbl-confirm": "Export Project",
            "lbl-combineMesh": "Combine Meshes",
            "lbl-removeUnused": "Remove Unused Objects"
        },
        "performance": {
            "title": "Performance Check",
            "lbl-confirm": "Publish Scene",
            "learnMore": "Learn More",
            "lbl-polycount": "Polygon Count",
            "lbl-material": "Materials",
            "lbl-texture": "Textures",
            "lbl-lights": "Lights",
            "lbl-fileSize": "File Size",
            "info-polycount": "We recommend your scene use no more than 50,000 triangles for mobile devices.",
            "info-material": "We recommend using no more than 25 unique materials in your scene to reduce draw calls on mobile devices.",
            "info-texture": "We recommend your textures use no more than 256MB of video RAM for mobile devices. We also recommend against using textures larger than 2048 x 2048.",
            "info-lights": "While dynamic lights are not enabled on mobile devices, we recommend using no more than 3 lights in your scene (excluding ambient and hemisphere lights) for your scene to run on low end PCs.",
            "info-fileSize": "We recommend a final file size of no more than 16MB for low bandwidth connections. Reducing the file size will reduce the time it takes to download your scene.",
            "txt-polycount": "{{count}} Triangles",
            "txt-material": "{{count}} Materials",
            "txt-ram": "~{{count}} Video RAM",
            "txt-texture": "{{count}} Large Textures",
            "txt-lights": "{{count}} Lights"
        },
        "progress": {
            "title": "Loading...",
            "msg": "Loading...",
            "lbl-cancel": "Cancel"
        },
        "publish": {
            "title": "Publish Scene",
            "lbl-confirm": "Save and Publish",
            "lbl-name": "Scene Name",
            "info-name": "Name must be between 4 and 64 characters and cannot contain underscores"
        },
        "published": {
            "title": "Scene Published",
            "header": "Your scene has been published.",
            "lbl-view": "View Your Scene"
        },
        "saveNewProject": {
            "title": "Support",
            "lbl-name": "Project Name",
            "info-name": "Name must be between 4 and 64 characters and cannot contain underscores",
            "lbl-confirm": "Save Project"
        },
        "support": {
            "title": "Support",
            "header": "Need to report a problem?",
            "msg": "You can file a <1>GitHub Issue</1> or e-mail us for support at <3>{{mail}}</3>",
            "discord": "You can also find us on <1>Discord</1>"
        }
    },
    "sources": {
        "bingImage": {
            "name": "Bing Images",
            "search": "Search by Bing"
        },
        "bingVideo": {
            "name": "Bing Videos",
            "search": "Search by Bing"
        },
        "element": {
            "name": "Elements"
        },
        "myAssets": {
            "name": "My Assets"
        },
        "googlePoly": {
            "name": "Google Poly",
            "search": "Search by Google"
        },
        "tenor": {
            "name": "Tenor GIFs",
            "search": "Search by Tenor",
            "ph-search": "Search GIFs..."
        },
        "sketchfab": {
            "name": "Sketchfab",
            "search": "Search by Sketchfab"
        }
    },
    "asset": {
        "dropZone": {
            "title": "Upload Asset"
        },
        "imageSourcePanel": {
            "ph-search": "Search images..."
        },
        "videoSourcePanel": {
            "ph-search": "Search videos..."
        },
        "assetSourcePanel": {
            "ph-search": "Search assets..."
        },
        "modelSourcePanel": {
            "ph-search": "Search models..."
        },
        "useUpload": {
            "multipleFileError": "Input does not accept multiple files.",
            "mineTypeError": "\"{{name}}\" does not match the following mime types or extensions: {{types}}",
            "progressTitle": "Uploading Files",
            "progressMsg": "Uploading files {{uploaded}} of {{total}}: {{percentage}}%",
            "uploadError": "Upload Error",
            "uploadErrorMsg": "Error uploading file: {{message}}",
            "uploadErrorDefaultMsg": "There was an unknown error"
        }
    },
    "openLink": {
        "description": "Please click the Open to navigate to the link.",
        "lbl-open": "Open"
    },
    "interactableModel": {
        "lbl-buy": "Buy",
        "lbl-learnMore": "Learn More"
    }
}
