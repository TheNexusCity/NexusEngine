# Default values for xrengine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

domain: xrengine.dev

client:
  enabled: true
  name: xrengine-client

  replicaCount: 1
  image:
    repository: lagunalabs/xrengine
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: xrsocial.local
        paths: ["/"]
    # tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  extraEnv:
    API_SERVER: http://xrsocial.local
    SITE_TITLE: MyXR
    SITE_DESC: Connected Worlds for Everyone
    APP_ENV: production

release:
  name: dev

api:
  enabled: true
  name: xrengine-api

  replicaCount: 1
  image:
    repository: lagunalabs/xrengine
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3030

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api.social.local
        paths: ["/"]
    # tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  # Extra Environment variables to configure xrsocial
  extraEnv:
    # ENV_VAR1: val1
    # ENV_VAR2: val2

    # automatically filled by chart.. ignore
    # MYSQL_PORT: 3306
    # MYSQL_DATABASE: xrengine
    # MYSQL_USER: server
    # MYSQL_PASSWORD: password

    SMTP_HOST: ""
    SMTP_PORT: ""
    SMTP_USER: ""
    SMTP_PASS: ""

    GITHUB_CLIENT_ID: ""
    GITHUB_CLIENT_SECRET: ""
    GITHUB_CALLBACK_URL: http://127.0.0.1:3000/oauth/github

    FACEBOOK_CLIENT_ID: ""
    FACEBOOK_CLIENT_SECRET: ""
    FACEBOOK_CALLBACK_URL: http://127.0.0.1:3000/oauth/facebook

    GOOGLE_CLIENT_ID: ""
    GOOGLE_CLIENT_SECRET: ""
    GOOGLE_CALLBACK_URL: http://127.0.0.1:3000/oauth/google


    STORAGE_PROVIDER: local
    STORAGE_S3_BUCKET_NAME: ""
    STORAGE_S3_PUBLIC_VIDEO_PATH: "/"
    STORAGE_S3_PUBLIC_VIDEO_BUCKET: ""
    STORAGE_S3_REGION: ""
    STORAGE_S3_CLOUDFRONT_DOMAIN: ""
    STORAGE_AWS_ACCESS_KEY_ID: ""
    STORAGE_AWS_ACCESS_KEY_SECRET: ""

    AWS_SMS_REGION: ""
    AWS_SMS_ACCESS_KEY_ID: ""
    AWS_SMS_SECRET_ACCESS_KEY: ""
    AWS_SMS_TOPIC_ARN: ""
    # SERVER_MODE: "api"


media:
  enabled: true
  name: xrengine-media

  replicaCount: 1
  image:
    repository: lagunalabs/xrengine
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3030

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api.xrsocial.local
        paths: ["/video"]
    # tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  # Extra Environment variables to configure xrsocial
  extraEnv:
    # ENV_VAR1: val1
    # ENV_VAR2: val2

    # automatically filled by chart.. ignore
    # MYSQL_PORT: 3306
    # MYSQL_DATABASE: xrengine
    # MYSQL_USER: server
    # MYSQL_PASSWORD: password

    SMTP_HOST: ""
    SMTP_PORT: ""
    SMTP_USER: ""
    SMTP_PASS: ""

    GITHUB_CLIENT_ID: ""
    GITHUB_CLIENT_SECRET: ""
    GITHUB_CALLBACK_URL: http://127.0.0.1:3000/oauth/github

    FACEBOOK_CLIENT_ID: ""
    FACEBOOK_CLIENT_SECRET: ""
    FACEBOOK_CALLBACK_URL: http://127.0.0.1:3000/oauth/facebook

    GOOGLE_CLIENT_ID: ""
    GOOGLE_CLIENT_SECRET: ""
    GOOGLE_CALLBACK_URL: http://127.0.0.1:3000/oauth/google


    STORAGE_PROVIDER: local
    STORAGE_S3_BUCKET_NAME: ""
    STORAGE_S3_PUBLIC_VIDEO_PATH: "/"
    STORAGE_S3_PUBLIC_VIDEO_BUCKET: ""
    STORAGE_S3_REGION: ""
    STORAGE_S3_CLOUDFRONT_DOMAIN: ""
    STORAGE_AWS_ACCESS_KEY_ID: ""
    STORAGE_AWS_ACCESS_KEY_SECRET: ""

    AWS_SMS_REGION: ""
    AWS_SMS_ACCESS_KEY_ID: ""
    AWS_SMS_SECRET_ACCESS_KEY: ""
    AWS_SMS_TOPIC_ARN: ""
    # SERVER_MODE: "media"


editor:
  enabled: true
  name: xrengine-editor

  replicaCount: 1
  image:
    # Reminder: Editor image still on xrengine we didn't create image for xrengine
    repository: xrengine/editor
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: local-editor.xrsocial.local
        paths: ["/"]
    # tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  extraEnv: {}

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}


gameserver:
  enabled: true
  name: gameserver

  replicaCount: 1
  image:
    repository: lagunalabs/xrengine
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 3031

  serviceAccount:
    create: true
    annotations: {}
    name:


testbot:
  enabled: true
  name: xrengine-testbot
  suspend: true

  image:
    repository: lagunalabs/xrengine-testbot
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  extraEnv:
    API_SERVER: http://xrsocial.local
    SITE_TITLE: MyXR
    SITE_DESC: Connected Worlds for Everyone
    APP_ENV: production

########### Subcharts - values here will overwrite the subchart

mariadb:
  enabled: false
  nameOverride: xrengine-mariadb
  db:
    name: xrengine
    user: server
    password: password
    existingSecret:
  replication:
    enabled: false
  externalHost: ""  # use to override - must set mariadb.enabled to false
  externalPort: 3306

agones:
  enabled: false

redis:
  enabled: false

analytics:
  enabled: false
  name: xrengine-analytics

  replicaCount: 1
  image:
    repository: lagunalabs/xrengine
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 3030

  serviceAccount:
    create: true
    annotations: {}
    name: